<Window x:Class="ONtimer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:visualFx="http://mixmodes.com/visualFx"
        xmlns:p="clr-namespace:ONtimer.Properties"
        Title="ON! timer" Height="295" Width="435"
        MinHeight="150"
        MinWidth="200"
        Icon="ON.ico"
        MouseDown="Window_MouseDown"
        MouseEnter="Window_MouseEnter"
        MouseLeave="Window_MouseLeave"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        xmlns:cmd="clr-namespace:ONtimer.Commands"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}"
        MouseMove="Window_MouseMove"
        PreviewTextInput="Window_PreviewTextInput"
        PreviewMouseDoubleClick="Window_PreviewMouseDoubleClick"
        Closing="Window_Closing">

    <Window.Resources>
        <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Orange"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="3,3,3,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ThicknessAnimation To="0,0,0,0" Storyboard.TargetProperty="Margin" BeginTime="00:00:00" Duration="0:0:0.05" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ThicknessAnimation To="3,3,3,3" Storyboard.TargetProperty="Margin" BeginTime="00:00:00" Duration="0:0:0.05" FillBehavior="Stop"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ThicknessAnimation To="4,4,4,4" Storyboard.TargetProperty="Margin" BeginTime="00:00:00" Duration="0:0:0.02" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ThicknessAnimation To="0,0,0,0" Storyboard.TargetProperty="Margin" BeginTime="00:00:00" Duration="0:0:0.02" FillBehavior="Stop"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>

        <Storyboard x:Key="clockBlink" RepeatBehavior="5x">
            <ColorAnimation To="#FF7300" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.2" AccelerationRatio="0.9"/>
            <ColorAnimation BeginTime="0:0:0.2" From="#FF7300"  To="{x:Null}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.1" AccelerationRatio="0.9"/>
        </Storyboard>

        <Storyboard x:Key="timerStartAnimation">
            <ColorAnimation From="Lime"  To="{x:Null}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.2" />
        </Storyboard>

        <Storyboard x:Key="timerStopAnimation">
            <ColorAnimation From="OrangeRed"  To="{x:Null}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.2" />
        </Storyboard>
        
        <Storyboard x:Key="resetBlinkAnimation">
            <ColorAnimation From="Transparent"  To="{x:Null}" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1" AccelerationRatio="0.9"/>
        </Storyboard>

        <Storyboard x:Key="buttonPress">
            <ThicknessAnimation To="6,6,6,6" Storyboard.TargetProperty="Margin" BeginTime="00:00:00" Duration="0:0:0.05" FillBehavior="Stop"/>
            <ThicknessAnimation To="3,3,3,3" Storyboard.TargetProperty="Margin" BeginTime="00:00:00.05" Duration="0:0:0.05" FillBehavior="Stop"/>
        </Storyboard>

    </Window.Resources>
    
    <Window.CommandBindings>
        <CommandBinding x:Name="FullscreenCommand" Command="cmd:CustomCommands.ToggleFullscreenCommand" Executed="FullscreenCommand_Executed"/>
        <CommandBinding x:Name="ExitCommand" Command="cmd:CustomCommands.ExitCommand" Executed="ExitCommand_Executed" />
        <CommandBinding x:Name="StartAutoCommand" Command="cmd:CustomCommands.StartAutoCommand" CanExecute="StartCommand_CanExecute" Executed="StartAutoCommand_Executed"/>
        <CommandBinding x:Name="StartUpCommand" Command="cmd:CustomCommands.StartUpCommand" CanExecute="StartCommand_CanExecute" Executed="StartUpCommand_Executed"/>
        <CommandBinding x:Name="StartDownCommand" Command="cmd:CustomCommands.StartDownCommand" CanExecute="StartDownCommand_CanExecute" Executed="StartDownCommand_Executed"/>
        <CommandBinding x:Name="StopCommand" Command="cmd:CustomCommands.StopCommand" CanExecute="StopCommand_CanExecute" Executed="StopCommand_Executed"/>
        <CommandBinding x:Name="ResetCommand" Command="cmd:CustomCommands.ResetCommand" Executed="ResetCommand_Executed"/>
        <CommandBinding x:Name="ResetToZeroCommand" Command="cmd:CustomCommands.ResetToZeroCommand" Executed="ResetToZeroCommand_Executed" />
        <CommandBinding x:Name="ExitFullscreenCommand" Command="cmd:CustomCommands.ExitFullscreenCommand" CanExecute="ExitFullscreenCommand_CanExecute" Executed="ExitFullscreenCommand_Executed"/>
        <CommandBinding x:Name="ToggleStartStopCommand" Command="cmd:CustomCommands.ToggleStartStopCommand" Executed="ToggleStartStopCommand_Executed"/>
    </Window.CommandBindings>
    
    <Window.InputBindings>
        <KeyBinding Command="cmd:CustomCommands.ToggleFullscreenCommand" Key="F11"/>
        <KeyBinding Command="cmd:CustomCommands.StartAutoCommand" Key="A"/>
        <KeyBinding Command="cmd:CustomCommands.StartAutoCommand" Key="Enter"/>
        <KeyBinding Command="cmd:CustomCommands.StartUpCommand" Key="U"/>
        <KeyBinding Command="cmd:CustomCommands.StartDownCommand" Key="D"/>
        <KeyBinding Command="cmd:CustomCommands.StopCommand" Key="S"/>
        <KeyBinding Command="cmd:CustomCommands.ResetCommand" Key="R"/>
        <KeyBinding Command="cmd:CustomCommands.ResetToZeroCommand" Key="Z"/>
        <KeyBinding Command="cmd:CustomCommands.ExitFullscreenCommand" Key="Escape"/>
        <KeyBinding Command="cmd:CustomCommands.ToggleStartStopCommand" Key="Space"/>
    </Window.InputBindings>
    
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Command="cmd:CustomCommands.StartAutoCommand" InputGestureText="A"/>
            <Separator />
            <MenuItem Command="cmd:CustomCommands.StartUpCommand" InputGestureText="U"/>
            <MenuItem Command="cmd:CustomCommands.StartDownCommand" InputGestureText="D"/>
            <MenuItem Command="cmd:CustomCommands.StopCommand" InputGestureText="S"/>
            <MenuItem Command="cmd:CustomCommands.ResetCommand" InputGestureText="R"/>
            <MenuItem Command="cmd:CustomCommands.ResetToZeroCommand" InputGestureText="Z"/>
            <Separator />
            <MenuItem Header="_Notification settings">
                <MenuItem Header="_Play sound" IsCheckable="True" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=ExpirationAudioEnabled}"/>
                <MenuItem Header="_Blink screen" IsCheckable="True" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=ExpirationBlinkingEnabled}"/>
            </MenuItem>
            <Separator/>
            <MenuItem Command="cmd:CustomCommands.ToggleFullscreenCommand" InputGestureText="F11"/>
            <MenuItem Command="cmd:CustomCommands.ExitCommand" InputGestureText="Alt+F4"/>
        </ContextMenu>
    </Window.ContextMenu>
   
    
    <Border BorderBrush="{StaticResource ProwarenessOrange}" BorderThickness="1">
        <Grid DataContext="{Binding}">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="2*"  MinHeight="30"/>
            </Grid.RowDefinitions>

            <Border x:Name="ClockBorder" Background="Transparent" BorderBrush="{StaticResource ProwarenessOrange}" BorderThickness="{Binding Path=ClockBorderThickness, Mode=OneWay}"  Grid.Row="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2.5*"/>
                        <ColumnDefinition Width="2.5*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2.5*"/>
                        <ColumnDefinition Width="2.5*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Viewbox Grid.Column="1" Stretch="Uniform">
                        <TextBlock ContextMenuOpening="clockBox_ContextMenuOpening" FontWeight="Bold" Foreground="{StaticResource ProwarenessOrange}" x:Name="minutesTenBox" Text="{Binding Path=Timer.MinuteTens, FallbackValue=1}" MouseDown="minutesTenBox_MouseDown"/>
                    </Viewbox>
                    <Viewbox Grid.Column="2" Stretch="Uniform">
                        <TextBlock ContextMenuOpening="clockBox_ContextMenuOpening" FontWeight="Bold" Foreground="{StaticResource ProwarenessOrange}" x:Name="minutesSingleBox" FontSize="{Binding ElementName=minutesTenBox, Path=FontSize}" Text="{Binding Path=Timer.MinuteSingle, FallbackValue=2}" MouseDown="minutesSingleBox_MouseDown"/>
                    </Viewbox>
                    <Grid Grid.Column="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height=".2*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height=".2*"/>
                        </Grid.RowDefinitions>
                        <Viewbox Grid.Row="1">
                            <TextBlock x:Name="colonsBox" FontWeight="Bold" Foreground="{StaticResource ProwarenessOrange}" HorizontalAlignment="Center" FontSize="{Binding ElementName=minutesTenBox, Path=FontSize}">:</TextBlock>
                        </Viewbox>
                    </Grid>
                    <Viewbox Grid.Column="4">
                        <TextBlock ContextMenuOpening="clockBox_ContextMenuOpening" FontWeight="Bold" Foreground="{StaticResource ProwarenessOrange}" x:Name="secondsTenBox" FontSize="{Binding ElementName=minutesTenBox, Path=FontSize}" Text="{Binding Path=Timer.SecondsTens, FallbackValue=3}" MouseDown="secondsTenBox_MouseDown"/>
                    </Viewbox>
                    <Viewbox Grid.Column="5">
                        <TextBlock ContextMenuOpening="clockBox_ContextMenuOpening" FontWeight="Bold"  Foreground="{StaticResource ProwarenessOrange}" x:Name="secondsSingleBox" FontSize="{Binding ElementName=minutesTenBox, Path=FontSize}" Text="{Binding Path=Timer.SecondsSingle, FallbackValue=4}" MouseDown="secondsSingleBox_MouseDown"/>
                    </Viewbox>

                </Grid>
            </Border>
            <Grid Grid.Row="2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button IsTabStop="False" Style="{StaticResource MainButtonStyle}" Grid.Column="1" x:Name="startStopResetButton" Click="startStopResetButton_Click" MouseLeave="startStopResetButton_MouseLeave">
                    <Image x:Name="ONButtonImage" Source="ON-transparent.png" Margin="0,10,0,5"/>
                </Button>

            </Grid>

        </Grid>
    </Border>
</Window>
